1. 中心Entity/結果Entityの分割
Entityを2個以上のEntityに分離する場合、中心Entityと結果Entityに導出される場合が発生する。これと同じくEntity分割
後どんな現象が発生するのか？

- Join発生し性能低下：2個のEntityに分割できて2個のEntityに関するJoin発生し制の低下が発生する。

- 交差Entity必要可能：2個のEntityがM:N関係なら交差Entityに導出される。

- オンライン処理：オンライン処理し業務に従い、統合Entityが有利かEntity分離が有利かにより、異なる。例えば、
カードテーブルの取引内訳Dataまで保存されていると仮定しよう。もし、過去履歴まで照会しようとしたら統合Entityの
場合、一つのカード番号を現在Dataに早く抽出する方法が提供するべきである。

- バッチ処理：バッチ処理し、中心Entityで分割する場合がEntityの大きさが小さくなり、有利になる。

- 業務柔軟性(Entity別)：Entity別で業務が変わる場合は該当Entityだけ修正すればいいので中心Entityで分離する場合が
有利

- 業務柔軟性(全体)：全体業務柔軟性は中心Entityを分離することとは関係がないので二つすべて同一する。

- 管理：中心Entityで分離する場合Dataと分離し作業あ可能になり、もっと有利する。

- 保存空間：根本Entityで分離する場合Entityの大きさが小さくなり、保存空間は減少する。

- Data整合性：中心Entityに分離する場合は重複Dataを除去できて瀬能が向上する。

- 業務分析：中心Entityに分離する場合はEntityが分離できていて有利になる。

