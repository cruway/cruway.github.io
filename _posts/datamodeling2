1. モデリングの主体
モデリングはモデルラーの役割を持っている一人のみを主体にすることではない。プロジェクトに関する人の中で
データと業務に関連がある担当者たちが一緒に参加すれば成功する

業務をよく知っている担当者だけデータモデリングをするとデータ整合性は保証できるが性能は保証するのが難しい。
プロジェクトをリードするすべての人、データおよび業務と関連がある人たちと一緒にデータモデリングで参加することで
データ整合性及び性能を考慮できる。

2. データモデリングの特徴
最適化されたデータモデリングの特徴は次のご覧ください。

・現在業務に関する内容を含む：現在構築しようと思うシステムを管理しなかればならないデータを体系的に管理し、
該当のデータに関する現在業務がすべて最適に適用するべきである。


・AS-ISに関する最適化：現在業務に関してまたは現在データ整合性及び性能を保証できるデータ管理をためにデータモデリング
がちゃんとできること

・一貫性があるデータモデリング：各、Entity、AttributeのNaming Rule 及びドメイン設定、用語辞書の使用などで
一つのデータモデリングで同一なAttributeのデータ形式及び同一の名前を指定すること。

・TO-BE業務に関する戦略/計画を導出：データモデリングは現在の業務を最適にしなければならないことは当然で今後
発生する業務に関する戦略及び計画も考慮する必要がある。
データモデリングをすることで一番難しい部分は上手く進めないことが現実である。でも、データと業務は停止することではなく
引き続きずっと変化するのでTOBEを考慮しなければならない。

・Physical Modelingに関する考慮：データモデリングはシステム構築するときにデータベースに構築されて最適化する
Physical Modelingができるようにデータモデリングから考慮するべき

・安定できな性能：データモデリングの主な目的はデータ整合性と性能である。このような性能はデータモデリングに
左右する場合もある。
もちろん、SQLチューニングを通じて性能を向上することもできるが性能を考慮したデータモデリングを通じて基本的な
性能を保証ができるようにデータモデリングを作らなければならない。


3. データモデリングの順番

1) 要件分析：現業の要求事項に関する内容を分析し概念設計に関する必要な情報を整理する
2) 概念設計：Entity, Relationship 及び Entity 統合をする。
3) Logical設計：Normalization 及び Entity 統合をする。
4) Physical設計：データベース化するためにEntityはテーブルに、Attributeはカラムに作る
