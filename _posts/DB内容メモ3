ランダムアクセスを理解しよう
結合インデックスのカラム順番は四つの優先順位により生成する。優先順位を間違えてインデックスを生成すると我々は
該当のインデックスを利用して性能向上を期待することは難しい。

・1番：カラムを使用した演算子によるインデックスカラム選定
・2番：ランダムアクセスを考慮したインデックスカラム選定
・3番：整列除去するためのインデックスカラム選定
・4番：単一カラムの分布図を考慮したインデックスカラム選定

2番の優先順位のランダムアクセスはなんだろう？ランダムアクセスはデータを保存するブロックを1回で複数アクセスすることでは
なく1回に1個のブロックだけアクセスをする方式である。

1回で複数のブロックをサクセスしたら同じ量のデータにより、少ない回数のディスクI/Oが発生して性能向上ができる。

テーブルを最初から最後までアクセスするテーブル全体スキャン(Table Full Scan)の場合は1回で複数のブロックをアクセスをする
ことができて1回に複数のブロックをアクセスする多中ブロックI/Oを修行する。

そうしたら果たしてどんな作業でランダムサクセスが発生するのか？それはすなわちインデックスをアクセスして確認した
ROWIDを利用してテーブルをアクセスする場合、ランダムアクセスが発生する。

ROWIDは該当データを探すことができる唯一のアドレス値で我々がインデックスを利用することはインデックスより条件を
満足するインデックス値をアクセスした後、ROWIDを確認しROWID値からテーブルをアクセスすることをいみする。

このようにインデックスアクセス後テーブルをアクセスする場合発生するI/Oは1回1ブロックだけアクセスするランダムアクセスが
発生する。
