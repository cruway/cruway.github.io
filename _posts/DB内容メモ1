【DB勉強内容は今後整理してアップロードする予定】

データベースが大容量に変わることで我々はいつも性能について悩んでいる。
これは多くのデータの中で我々が望むデータを抽出することが思ったより優しくないからだ。

こんな現象はデータが増加したら増加するほどもっと性能的に厳しくなるでしょ。
それで大容量データで我々が望む少なくて効率的にデータを抽出するためにインデックスを利用することである。

普通、インデックスは結合カラムインデックス及び単一カラムインデックスに構成されている。
さて、我々がどんな形のインデックスを選択しなければならなのか？

結論から言うと、ほとんどSQLでは結合カラムインデックスを選んだほうが良い。
これからその理由について調べよう。


SQL性能は処理範囲により、変わる。

SQLの性能は何によって変わるか？色々な要素により、SQL性能が変わることだ。
SQL性能は次の3つ項目で変わる。

・処理範囲の量
・ランダムアクセスの量
・整列の量

そうしたら処理範囲が少ないということは何を意味するのか？
処理範囲が少ないという言葉はアクセスをするデータ量が少ないことを意味する。

次の例を確認しよう

SELECT カード番号、使用額
FROM 取引内訳
WHERE 取引日付 = '200803'
AND 使用区分 = '正常'

ここでインデックスに関する処理範囲を確認しよう。
さて、上のSQLで生成するインデックスの種類は?

・取引日付インデックス
・使用区分インデックス
・取引日付 + 使用区分 インデックス
・使用区分 + 取引日付 インデックス

取引日付インデックス
取引日付インデックスを利用することで処理範囲は取引日付カラムによってのみ減少する。
よって、取引日付カラムの値が'200803'のデータすべてがアクセスをする。
アクセスデータに対して使用区分カラムの値が'正常'のデータだけ抽出できる。
結局、取引日付カラムによってのみ処理範囲が減少して、使用区分カラムによっては処理範囲が減少しなくなる。

使用区分インデックス
使用区分カラムでインデックスを生成すると使用区分カラムの値が'正常'のすべてのデータがアクセスする。
取引日付カラムの値は処理範囲を減少するためのなんお役割を実行しなくなる。
結局、使用区分カラムでインデックスを生成すると使用区分カラムの値だけで処理範囲が減少する。

取引日付 + 使用区分インデックス
該当のインデックスは取引日付カラムの値が'200703'のデータの中で使用区分カラムの値が'正常'になったデータだけアクセスする。
取引日付 + 使用区分インデックスを利用する瞬間処理範囲は取引日付カラムによって減少し、減少になった処理範囲で使用区分カラムの
値が'正常'のデータだけアクセスする。
取引日付カラムと使用区分カラムによって処理範囲が減少する。よって、先話した単一カラムインデックスにより処理範囲がもっと多く
減少して性能的に向上できる。

使用区分 + 取引日付 インデックス
三つ目のインデックスと同じように使用区分カラムの値が'正常'のデータの中で取引日付カラムの値が'200803'のデータだけ
抽出する。

よって、該当のインデックスも使用区分カラムと取引日付カラムによって同時に処理範囲が減少する。このように結合カラム
インデックスを生成すると処理範囲をもっと減少することができる。

このような理由で単一カラムインデックスより結合カラムインデックスがSQL性能をもっと向上することができる。


WHERE文に使う演算子
それでは、WHERE条件で存在するすべてのカラムを順番に関係なく結合カラムインデックスを生成するとインデックスを構成
するすべてのカラムによって処理範囲が減少するか？

当然、それは違う。これを理解するためにはWHERE文に使用する演算子の種類を理解する必要がある。

・点条件：IN, = 演算子を利用する条件を意味して、該当演算子は一つの点だけ意味する。
・線分条件：LIKE, BETWEEN, <, >など点条件を除いた演算子を意味する。線分条件は一つの点だけではなく該当するすべての
数を意味する。

WHERE文で使う条件は点条件と線分条件で振り分ける。これみたいに、条件で使う演算子によってアクセスしなければならない
処理範囲の差異が発生する。

・点条件 + 点条件：二つの条件によって処理範囲が減少
・点条件 + 線分条件：二つの条件によって処理範囲が減少
・線分条件 + 線分条件：前の線分条件によって処理範囲が減少
・線分条件 + 点条件：前の線分条件によってのみ処理範囲が減少

この内容が簡単ですが、とても重要な意味を内包されている。この例を確認しよう。

SELECT カード番号、使用額
FROM 取引内訳
WHERE 取引日付 > '200803'
AND 使用区分 = '正常'

このSQLを実行したら前に話したように取引日付の条件は線分条件で使用区分条件は点条件になる。従って、該当のSQLに関して
最適なインデックスを利用したいと思うなら使用区分+取引日付インデックスを生成しなければならない。

このようにインデックスを生成したら点条件+線分条件で構成するので二つの条件によって処理範囲が減少する。

このような現象がなぜ発生するのかは次の講座で詳しく話しをしよう。インデックスで最も重要な要素は処理範囲を最小限
することができることである。

この中心に結合カラムインデックスが存在することを心に刻めよう。そして、結合カラムインデックスを生成したいなら点条件
と線分条件の順番によって処理範囲が変わることを注意しよう。
