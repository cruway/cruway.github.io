1. モデリングの段階

データモデリングの段階は次のように4段階に振り分ける

1) 要求事項分析
2) 概念モデル
3) 論理モデル
4) 物理モデル

概念モデルの目標は顧客との合意導出である。概念モデルが使われたのはそんなに長くではない。近頃、多くのプロジェクト
で概念モデルを使用しているが、この勝ちについては詳しくわからないことが多い。

概念モデルを顧客と合意なしてただ論理モデル前の檀家で使用することはもったいないことである。

概念モデルはシステムについてよくわからない業務担当者とコミュニケーションをするためにつかるべきで、技術要素は
排除し徹底的に業務的な観点で進むべきである。

概念モデルの場合、すべての属性が導出する必要がなく、特に業務概念モデルの場合すべての属性が導出する必要なしで
業務と関連があるエンティティと属性が主な要素になる。概念モデルは実際の業務と一番近い表現形式として価値をもつ。

実際に業務担当者とのコミュニケーション問題などでモデルが変更する必要がある場合、概念モデルから変更するべき。

論理モデルはDBMSが排除した論理的な観点で最終データモデルである。実際に一つの論理モデルは性能、物理的な環境を
考慮し複数の物理モデルに変換できる。

このような論理モデルは開発者たちにも必要だ。論理モデル完了は重複データがない正規化状態にすべての構成要素が
定義されてる状態になる必要がある。

物理モデルの観点は具現可能性と木法性能の到達にある。各種の物理的な方法を使って半正規化も行う。

物理的なモデルはほとんど開発者たちもほぼ見ないのが現実だ。開発者観点で業務を一番よく説明できるのは物理モデル
ではなく論理モデルだ。

でも実際具現作業では物理モデルが必要となる。物理モデルでは半正規化の内容以外にもMVIEW、TRIGGER、INDEXなどの
情報が必要

こんなモデリングの過程でたとえば物理DBMSが変更したと仮定しよう。論理モデルから出発することが正しいか？それとも
物理モデルから出発するのが正しいか？


2. データモデリングの考慮事項
データモデリングの時、考慮事項はすなわちデータモデリングをする目的にがいとうする。それでいつもデータの整合性と
性能を考慮しなければならない。

論理モデル：Business Ruleを支援しリサイクルが可能で、重複データが存在しない安定的で柔軟な状態が目標
物理モデル：性能目標を達成するための具現可能な物理構造の支援が目標


1) データ整合性

PCに同一なファイルをいろんなところで保管すると時間が過ぎてそれぞれのファイルはバージョンが違い、最新の
ファイルを探すことが難しくなる。

このような重複データが存在する場合、時間が過ぎることによってデータ整合性が危険になり、正確な最新のデータを
確認することができなくなる。

2) 性能
データモデリングをする場合、性能の考慮したEntity, Attribute 及び Relationship導出が必要になる。

例えば、取引内訳Entityに製造社Attributeが存在したと仮定しよう。該当Attributeには製造社名前が入力されている。
これと同じく製造社が変更したら取引内訳Entityで製造社名前を変更する必要があり、大容量テーブルの場合多くにデータ
に関するUpdate作業で大幅な性能低下が発生する。

このような現象を解決するためには製造社名前の値を別途Entityで分離して、製造社番号と製造社名前値で構成する必要が
あり、取引内訳Entityの製造社Attributeでは製造社番号でデータを管理する。

別途のEntityで構成された場合、取引内訳データを製造社名前と一緒に見る場合、Joinを使う必要がある。もちろん、Join
修行し性能低下が発生する可能性がある。

結局、データモデリングでデータ整合性と性能をどうやって配分するのかによって最適なデータモデリングになる。
