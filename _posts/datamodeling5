1. Entityの名前
Entityはデータモデリングを修行する人だけ見ることではない。従って、Entityでは標準化になった名前使用をお勧めする。
用語辞書、ドメイン(Data Type指定)を利用してだれが見ても理解できて、コミュニケーションができるようにネーミングルール
を決めなければならない

※Entity Naming Rule
・業務を表現
  - Entity名前に業務を適用しだれが見ても理解できるようにする
・略語使用自制
  - すべてに関する略語使用自制
  - 誰でも理解できる部分は略語使用可能
・名刺しよう
  - 名詞のみEntity表現
  - 動詞は使用しない(Do, Takeなど)
・唯一な名前使用
  - 重複Entity名前は使用禁止
  - Entity名前は唯一な名前だけ使用
・正確な意味付与
  - 曖昧なEntity名前は開発を大変にする。
  
2. Entity 検証
Entityを導出した後はすべてのEntityに関して検証をする。このような段階で修行したら時間がかかるが、データモデリング
で一番重要なEntity導出をもっと正確に行うことができる。

3. Entity 分割
Entity分割は一つのEntityを複数の小さなEntityに分離することを意味する。このようなEntity分割を行う理由は下記の通り
・重複データ除去：重複データ除去でデータ整合性を強化してこれは正規化と似たような順番になる。
・あまり使用しないAttribute分離：あまり使用しないAttributeをほかのEntityに分離して性能を向上する
・類似データを分離：類似データを別途のEntityに分離して管理及び性能を考慮する

我々はこのような理由でEntity分割を行う。それではその中にSubsetに関する分割を確認しよう。
Subsetに関する分割はデータだけ分割することである。例えば、講座Entityで法人口座と個人口座データを分離すると仮定しよう。
分割結果は法人口座Entityと個人口座Entityを導出できる。このような一つのEntityに同一な形のデータが一つの
Attributeで複数分離ができる場合、Subsetに関する分割を考慮することができる。

このようなSubsetに関するEntity分割を行う場合、一つの口座番号に関する照会を行うSQLが変わる可能性がある。普通の場合、
Entity分割をすると該当EntityにアクセスするSQLは複雑になる。

もちろん、口座番号自体で法人口座なのかは確認できればあえてUNION ALLを利用する必要がなくてアプリケーションで該当
Entityのみアクセスすることができる。これと同じであればEntity分割を一緒になる。
