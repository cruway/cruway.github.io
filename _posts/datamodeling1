1. データ増加による問題発生

データが増加することでシステムでは大きな変化が現れる。その中でデータのみ確認するとデータ増加と共に起きる
問題は二つに予約できる。

・データの増加→データの重複発生→データ整合性の問題発生
・データの増加→SQLの応答速度低下→性能低下

性能低下はSQLチューニングで解決できる。そしてテータの整合性問題はアプリケーションで解決できる。

でもこのような方法が根本的にな問題を解決することはできない。データの増加により、もっと重要になる二つの問題は
最適化されたデータモデリングを通じて解決できてこの方法こそ根本的な問題を解決する方法であるでしょ。

でもデータモデリングはいつもできることではない。従ってデータモデリングを再実行する段階で最適なデータモデリング
になるために頑張らなければならない。


2. 認識の変化
このような認識変化の理由はなんだろうか？これは周辺の様々なシステムからデータが増加し、それに対する問題が引き続き
発見されています。

それで、多くの人たちがデータモデリングの重要性を共有し、問題を認識することになった。

※データに関する認識変化
・顧客の変化：顧客は今のデータの重要性を認識し、データモデリングとSQLチューニングに多くの関心も持っている。
・プロジェクトリーターの変化：プロジェクトリーダーはデータモデリングとSQLチューニングに関する技術力を確保する
動きが増加している。


3. データとプロセス観点のデータモデリング
データとプロセス観点でデータモデリングはプロジェクトをする場合、コミュニケーションの道具になる。

実際にプロジェクトをすると多くの開発者はデータモデリングの産出物であるERDでコミュニケーションをすることが多い。

このようなERDは基本的にデータに関する要素が含まれている。

はっきり言うと業務プロセスはERDに含まれないがデータと業務を完全に分離することはできなくてある程度表現できる。


4. ERD寒天のデータモデリング
データモデリングを構成する要素はEntity, Relationship及びAttributeがある。

- Entity：データを保存する役割でPhysical Modelingをする場合、テーブルで作れる。
- Relationship: Entityたちとの関係を意味し、Physical Modelingをする場合、Foreign keyとして表現できる。
- Attribute: Entityを構成する属性を意味し、Physical Modelingをする場合、カラムで作られる。

結局、データモデリングは主要要素であるEntity, Relationship, Attributeを導き出す段階で最適化した構成要素で
データ整合性及び性能を保証する。
