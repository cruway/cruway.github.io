データモデリングを修行する時に実際の作業はERDに表現される。ERDを通じてEntityを配置してEntity間にRelationship
を設定する。

このような順番でERDを作成し、プロジェクト中に引き続き協議手段として使用する

Entity導出
↓
Entity配置
・LeftからRightまでTopからBottom形態でEntity配置
・Main Entityを中心に配置
↓
Entity Relationship設定
・Relationship名を指定(Optional)
↓
Relationship技術
↓
Relationship参与度技術
・Relationshipに関するCardinality選定
↓
Relationship必須程技術
・Mandatory/Optional決定

1. ERD表記方式
Entityになるためにはどんな条件を満足する必要があるか？
それは7の条件を満足したらEntity資格になり、データモデリングでEntityで具現できる。Entityで選定した後、Entityは
Physical Modelingでテーブルに変更できる

【Entity 定義】
・業務に必要な情報
  - 会社の重要なDataでも該当システムで必ず必要な情報だけをEntityに表現
・永続的にい存在
  - 仮で使うEntityはEntityで表現しない。
・客観的な集合
  - 配列の定義により、行と列が存在する(2つ以上の行)修行的な概念を持つこと。
  - どこのだれが理解できる客観的なEntityを定義が必要
  - 正確な集協議の形態がなること(職員、顧客)
・UNIQUE IDENTIGIERにより、識別可能
・業務で必ず使用
・1個以上のAttributeが存在
・1個以上のRelationshipが存在

1) 業務に必要な情報：通信会社の場合、通信に関する通話内訳データは必要だがHRシステムで通は内訳データは必要ない
結局システムで必ず必要なデータを保存する場合のみEntityに定義ができる。

2) 永続的に存在：永続に存族するデータを持つ場合のみ、Entityになる。任意EntityはERDに具現できない。そして、性能
を考慮し仮想で作られたEntityはERDで具現しない。結局データ整合性と関連がないEntityはERDで具現しない。

3) 客観的な集合：誰が見ても正確に区分ができる集合になる必要がある。例えば、部署テーブルで国内部署だけ含まれているか
海外部署も含まれているか及び部署履歴も含まれているかなど客観的な集合による定義が必要
