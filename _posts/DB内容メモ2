結合インデックスを構成するカラムの順番
インデックスを利用して性能向上の効果を期待したいならまず、該当のインデックスを利用し処理範囲を最大限に減少しな
ければならない。性能を向上するためには結合インデックスを構成するカラムは必ず次の順番に合うように生成する必要がある。

・1番：カラムを使用する演算子によるインデックス選定
・2番：ランダムアクセスを考慮したインデックスカラム選定
・3番：整列除去するためのインデックスカラム選定
・4番：単一カラムの分布図を考慮したインデックスカラム選定

この4段階優先順位によって我々は結合インデックスを生成する。この優先順位を守らないとそもそも該当インデックスを
利用した性能向上は難しくなる。

もちろん、結合インデックスを生成する優先順位でWHERE条件で使うカラムをインデックス構成することは当然のことで除外
した。該当SQLで使わないカラムを特別な理由なしでインデックスに追加するのはあまり多くない。

こんな結合インデックス構成ルールはなぜ作られたのか？少し考えるとこの回答はすぐ出るはずだ。ディスクのI/Oを減少
するためだ。

結局、こんな優先順位でインデックスを生成すると我々が望むデータを抽出するときに、最小限のディスクI/Oを発生して
性能を保証することができる。
